// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TP_Final.DAL.EntityFramework;

namespace TP_Final.Migrations
{
    [DbContext(typeof(AccountManagerDbContext))]
    [Migration("20211218202543_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TP_Final.Domain.Ejemplar", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("LibroID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("LibroID");

                    b.ToTable("Ejemplares");
                });

            modelBuilder.Entity("TP_Final.Domain.Libro", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<long>("ISBN")
                        .HasColumnType("bigint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("ID");

                    b.HasAlternateKey("ISBN");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("TP_Final.Domain.Notificacion", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("interval");

                    b.Property<long?>("PrestamoID")
                        .HasColumnType("bigint");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<long?>("UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("PrestamoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Notifiaciones");
                });

            modelBuilder.Entity("TP_Final.Domain.Prestamo", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("EjemplarID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FechaDevuelto")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("EjemplarID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("TP_Final.Domain.Usuario", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Puntos")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int>("TipoNotificacion")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasAlternateKey("Nombre");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TP_Final.Domain.Ejemplar", b =>
                {
                    b.HasOne("TP_Final.Domain.Libro", "Libro")
                        .WithMany("Ejemplares")
                        .HasForeignKey("LibroID");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("TP_Final.Domain.Notificacion", b =>
                {
                    b.HasOne("TP_Final.Domain.Prestamo", "Prestamo")
                        .WithMany()
                        .HasForeignKey("PrestamoID");

                    b.HasOne("TP_Final.Domain.Usuario", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Prestamo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TP_Final.Domain.Prestamo", b =>
                {
                    b.HasOne("TP_Final.Domain.Ejemplar", "Ejemplar")
                        .WithMany("Prestamos")
                        .HasForeignKey("EjemplarID");

                    b.HasOne("TP_Final.Domain.Usuario", "Usuario")
                        .WithMany("Prestamos")
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Ejemplar");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TP_Final.Domain.Ejemplar", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("TP_Final.Domain.Libro", b =>
                {
                    b.Navigation("Ejemplares");
                });

            modelBuilder.Entity("TP_Final.Domain.Usuario", b =>
                {
                    b.Navigation("Notificaciones");

                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
